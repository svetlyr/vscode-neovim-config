{
    "workbench.colorTheme": "Horizon Italic",
    "workbench.editor.editorActionsLocation": "titleBar",
    "workbench.editor.empty.hint": "hidden",
    "workbench.editor.enablePreview": false,
    "workbench.editor.labelFormat": "short",
    "workbench.editor.navigationScope": "editor",
    "workbench.editor.pinnedTabSizing": "compact",
    "workbench.editor.preferHistoryBasedLanguageDetection": true,
    "workbench.editor.sharedViewState": true,
    "workbench.editor.tabActionCloseVisibility": false,
    "workbench.enableExperiments": false,
    "workbench.list.smoothScrolling": true,
    "workbench.preferredDarkColorTheme": "Horizon Italic",
    "workbench.productIconTheme": "fluent-icons",
    "workbench.settings.enableNaturalLanguageSearch": false,
    "workbench.startupEditor": "none",
    "workbench.tree.indent": 14,
    "workbench.tree.renderIndentGuides": "always",
    "workbench.trustedDomains.promptInTrustedWorkspace": true,
    "workbench.activityBar.orientation": "vertical",
    "Lua.diagnostics.globals": [
        "vim"
    ],
    "Lua.runtime.version": "LuaJIT",
    "[astro]": {
        "editor.defaultFormatter": "astro-build.astro-vscode"
    },
    "[css]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[html]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[javascript]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[javascriptreact]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[json]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[jsonc]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[scss]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[typescript]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[typescriptreact]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[vue]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "extensions.experimental.affinity": {
        "asvetliakov.vscode-neovim": 1
    },
    "less.format.spaceAroundSelectorSeparator": true,
    "markdown.preview.breaks": true,
    "npm-intellisense.packageSubfoldersIntellisense": true,
    "playwright.reuseBrowser": false,
    "postcss.validate": false,
    "scss.format.spaceAroundSelectorSeparator": true,
    "auto-close-tag.SublimeText3Mode": true,
    "auto-close-tag.enableAutoCloseTag": false,
    "conventionalCommits.showNewVersionNotes": false,
    "vscode-neovim.neovimExecutablePaths.linux": "/usr/bin/nvim",
    "vscode-neovim.neovimExecutablePaths.darwin": "/opt/local/bin/nvim",
    "vscode-neovim.neovimExecutablePaths.win32": "C:\\Program Files\\Neovim\\bin\\nvim.exe",
    "vscode-neovim.neovimInitVimPaths.darwin": "/Users/svetly/.config/nvim/init.lua",
    "vscode-neovim.neovimInitVimPaths.win32": "C:\\Users\\svetly\\AppData\\Local\\nvim\\init.lua",
    "comments.useRelativeTime": false,
    "css.format.spaceAroundSelectorSeparator": true,
    "diffEditor.ignoreTrimWhitespace": false,
    "files.trimFinalNewlines": true,
    "files.trimTrailingWhitespace": true,
    "editor.accessibilitySupport": "off",
    "editor.autoClosingBrackets": "always",
    "editor.autoClosingOvertype": "always",
    "editor.autoClosingQuotes": "always",
    "editor.bracketPairColorization.enabled": true,
    "editor.cursorBlinking": "solid",
    "editor.cursorStyle": "underline",
    "editor.cursorSurroundingLines": 10,
    "editor.fontLigatures": true,
    "editor.formatOnSave": true,
    "editor.guides.bracketPairs": "active",
    "editor.hover.delay": 200,
    "editor.lineNumbers": "relative",
    "editor.linkedEditing": true,
    "editor.minimap.enabled": false,
    "editor.multiCursorPaste": "full",
    "editor.parameterHints.cycle": true,
    "editor.quickSuggestions": {
        "strings": true
    },
    "editor.quickSuggestionsDelay": 0,
    "editor.rename.enablePreview": false,
    "editor.renderWhitespace": "trailing",
    "editor.scrollBeyondLastColumn": 0,
    "editor.scrollBeyondLastLine": false,
    "editor.scrollbar.horizontal": "hidden",
    "editor.scrollbar.vertical": "hidden",
    "editor.smoothScrolling": true,
    "editor.tokenColorCustomizations": {
        "textMateRules": []
    },
    "editor.wordWrap": "on",
    "breadcrumbs.symbolPath": "off",
    "breadcrumbs.symbolSortOrder": "name",
    "debug.console.fontFamily": "Hack Nerd Font Mono",
    "editor.codeLensFontFamily": "Hack Nerd Font",
    "editor.fontFamily": "Hack Nerd Font",
    "errorLens.fontFamily": "Hack Nerd Font",
    "explorer.confirmDelete": false,
    "explorer.confirmDragAndDrop": false,
    "explorer.copyRelativePathSeparator": "/",
    "explorer.incrementalNaming": "smart",
    "window.customMenuBarAltFocus": false,
    "window.enableMenuBarMnemonics": false,
    "window.menuBarVisibility": "toggle",
    "emmet.excludeLanguages": [
        "markdown",
        "Typescript React",
        "Javascript React"
    ],
    "emmet.includeLanguages": {
        "postcss": "css"
    },
    "emmet.showSuggestionsAsSnippets": true,
    "emmet.triggerExpansionOnTab": true,
    "files.associations": {
        "*.css": "tailwindcss",
        "*.json": "jsonc",
        ".prettierrc": "jsonc"
    },
    "files.eol": "\n",
    "files.exclude": {
        "**/.git": false
    },
    "git.autofetch": true,
    "git.autofetchPeriod": 1800,
    "git.confirmSync": false,
    "git.fetchOnPull": true,
    "git.suggestSmartCommit": false,
    "gitlens.currentLine.enabled": false,
    "gitlens.defaultGravatarsStyle": "mp",
    "gitlens.plusFeatures.enabled": false,
    "gitlens.showWhatsNewAfterUpgrades": false,
    "html.format.indentHandlebars": true,
    "html.format.indentInnerHtml": true,
    "html.format.wrapLineLength": 0,
    "javascript.format.insertSpaceAfterConstructor": true,
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": true,
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": true,
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": true,
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": true,
    "javascript.format.insertSpaceBeforeFunctionParenthesis": true,
    "javascript.format.placeOpenBraceOnNewLineForControlBlocks": true,
    "javascript.format.placeOpenBraceOnNewLineForFunctions": true,
    "javascript.preferences.jsxAttributeCompletionStyle": "braces",
    "javascript.preferences.quoteStyle": "double",
    "javascript.suggest.paths": false,
    "javascript.updateImportsOnFileMove.enabled": "always",
    "search.smartCase": true,
    "search.showLineNumbers": true,
    "search.searchEditor.reusePriorSearchConfiguration": true,
    "search.searchEditor.doubleClickBehaviour": "openLocationToSide",
    "terminal.external.linuxExec": "zsh",
    "terminal.integrated.copyOnSelection": true,
    "terminal.integrated.cursorStyle": "underline",
    "terminal.integrated.defaultProfile.linux": "zsh",
    "terminal.integrated.enableMultiLinePasteWarning": false,
    "terminal.integrated.fontFamily": "Hack Nerd Font Mono",
    "terminal.integrated.fontSize": 13,
    "terminal.integrated.rightClickBehavior": "nothing",
    "terminal.integrated.scrollback": 100000,
    "terminal.integrated.shellIntegration.decorationsEnabled": "gutter",
    "terminal.integrated.shellIntegration.enabled": true,
    "terminal.integrated.showExitAlert": false,
    "terminal.integrated.smoothScrolling": true,
    "terminal.integrated.useWslProfiles": false,
    "terminal.integrated.windowsEnableConpty": true,
    "terminal.integrated.defaultProfile.windows": "PowerShell",
    "terminal.integrated.cursorStyleInactive": "underline",
    "terminal.external.windowsExec": "C:\\Program Files\\PowerShell\\7\\pwsh.exe",
    "typescript.format.insertSpaceAfterConstructor": true,
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": true,
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": true,
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": true,
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": true,
    "typescript.format.insertSpaceAfterTypeAssertion": true,
    "typescript.format.insertSpaceBeforeFunctionParenthesis": true,
    "typescript.format.placeOpenBraceOnNewLineForControlBlocks": true,
    "typescript.format.placeOpenBraceOnNewLineForFunctions": true,
    "typescript.suggest.paths": false,
    "typescript.updateImportsOnFileMove.enabled": "always",
    "vue.inlayHints.missingProps": true,
    "vue.complete.casing.status": false,
    "vue.complete.casing.props": "autoCamel",
    "vue.updateImportsOnFileMove.enabled": true,
    "whichkey.bindings": [
        {
            "command": "workbench.action.showCommands",
            "key": ";",
            "name": "commands",
            "type": "command"
        },
        {
            "command": "references-view.find",
            "key": "?",
            "name": "View All References",
            "type": "command",
            "when": "editorHasReferenceProvider"
        },
        {
            "bindings": [
                {
                    "command": "workbench.action.showAllEditors",
                    "key": "b",
                    "name": "Show all buffers/editors",
                    "type": "command"
                },
                {
                    "command": "workbench.action.closeActiveEditor",
                    "key": "d",
                    "name": "Close active editor",
                    "type": "command"
                },
                {
                    "command": "workbench.action.moveEditorToLeftGroup",
                    "key": "h",
                    "name": "Move editor into left group",
                    "type": "command"
                },
                {
                    "command": "workbench.action.moveEditorToBelowGroup",
                    "key": "j",
                    "name": "Move editor into below group",
                    "type": "command"
                },
                {
                    "command": "workbench.action.moveEditorToAboveGroup",
                    "key": "k",
                    "name": "Move editor into above group",
                    "type": "command"
                },
                {
                    "command": "workbench.action.moveEditorToRightGroup",
                    "key": "l",
                    "name": "Move editor into right group",
                    "type": "command"
                },
                {
                    "command": "workbench.action.closeOtherEditors",
                    "key": "m",
                    "name": "Close other editors",
                    "type": "command"
                },
                {
                    "command": "workbench.action.nextEditor",
                    "key": "n",
                    "name": "Next editor",
                    "type": "command"
                },
                {
                    "command": "workbench.action.previousEditor",
                    "key": "p",
                    "name": "Previous editor",
                    "type": "command"
                },
                {
                    "command": "workbench.action.files.newUntitledFile",
                    "key": "N",
                    "name": "New untitled editor",
                    "type": "command"
                },
                {
                    "command": "workbench.action.reopenClosedEditor",
                    "key": "u",
                    "name": "Reopen closed editor",
                    "type": "command"
                },
                {
                    "commands": [
                        "editor.action.selectAll",
                        "editor.action.clipboardCopyAction",
                        "cancelSelection"
                    ],
                    "key": "y",
                    "name": "Copy buffer to clipboard",
                    "type": "commands"
                }
            ],
            "key": "b",
            "name": "Buffers/Editors...",
            "type": "bindings"
        },
        {
            "bindings": [
                {
                    "command": "workbench.action.debug.start",
                    "key": "d",
                    "name": "Start debug",
                    "type": "command"
                },
                {
                    "command": "workbench.action.debug.stop",
                    "key": "S",
                    "name": "Stop debug",
                    "type": "command"
                },
                {
                    "command": "workbench.action.debug.continue",
                    "key": "c",
                    "name": "Continue debug",
                    "type": "command"
                },
                {
                    "command": "workbench.action.debug.pause",
                    "key": "p",
                    "name": "Pause debug",
                    "type": "command"
                },
                {
                    "command": "workbench.action.debug.run",
                    "key": "r",
                    "name": "Run without debugging",
                    "type": "command"
                },
                {
                    "command": "workbench.action.debug.restart",
                    "key": "R",
                    "name": "Restart ebug",
                    "type": "command"
                },
                {
                    "command": "workbench.action.debug.stepInto",
                    "key": "i",
                    "name": "Step into",
                    "type": "command"
                },
                {
                    "command": "workbench.action.debug.stepOver",
                    "key": "s",
                    "name": "Step over",
                    "type": "command"
                },
                {
                    "command": "workbench.action.debug.stepOut",
                    "key": "o",
                    "name": "Step out",
                    "type": "command"
                },
                {
                    "command": "editor.debug.action.toggleBreakpoint",
                    "key": "b",
                    "name": "Toggle breakpoint",
                    "type": "command"
                },
                {
                    "command": "editor.debug.action.toggleInlineBreakpoint",
                    "key": "B",
                    "name": "Toggle inline breakpoint",
                    "type": "command"
                },
                {
                    "command": "debug.jumpToCursor",
                    "key": "j",
                    "name": "Jump to cursor",
                    "type": "command"
                },
                {
                    "command": "workbench.debug.action.toggleRepl",
                    "key": "v",
                    "name": "REPL",
                    "type": "command"
                },
                {
                    "command": "workbench.debug.action.focusWatchView",
                    "key": "w",
                    "name": "Focus on watch window",
                    "type": "command"
                },
                {
                    "command": "editor.debug.action.selectionToWatch",
                    "key": "W",
                    "name": "Add to watch",
                    "type": "command"
                }
            ],
            "key": "d",
            "name": "Debug...",
            "type": "bindings"
        },
        {
            "bindings": [
                {
                    "command": "workbench.view.explorer",
                    "key": "",
                    "name": "default",
                    "type": "command"
                },
                {
                    "command": "workbench.action.toggleSidebarVisibility",
                    "key": "when:sideBarVisible && explorerViewletVisible",
                    "name": "Hide explorer",
                    "type": "command"
                }
            ],
            "key": "e",
            "name": "Show tree/explorer view",
            "type": "conditional"
        },
        {
            "command": "editor.toggleFold",
            "key": "f",
            "name": "Fold",
            "type": "command"
        },
        {
            "bindings": [
                {
                    "command": "gitlens.showCommitSearch",
                    "key": "/",
                    "name": "Search Commits",
                    "type": "command",
                    "when": "gitlens:enabled && config.gitlens.keymap == 'alternate'"
                },
                {
                    "command": "git.stage",
                    "key": "a",
                    "name": "Stage",
                    "type": "command"
                },
                {
                    "command": "git.checkout",
                    "key": "b",
                    "name": "Checkout",
                    "type": "command"
                },
                {
                    "command": "gitlens.openFileInRemote",
                    "key": "B",
                    "name": "Browse",
                    "type": "command"
                },
                {
                    "command": "git.commit",
                    "key": "c",
                    "name": "Commit",
                    "type": "command"
                },
                {
                    "command": "gitlens.views.cherryPick",
                    "key": "C",
                    "name": "Cherry Pick",
                    "type": "command"
                },
                {
                    "command": "git.deleteBranch",
                    "key": "d",
                    "name": "Delete Branch",
                    "type": "command"
                },
                {
                    "command": "git.fetch",
                    "key": "f",
                    "name": "Fetch",
                    "type": "command"
                },
                {
                    "command": "git.pullFrom",
                    "key": "F",
                    "name": "Pull From",
                    "type": "command"
                },
                {
                    "command": "workbench.view.scm",
                    "key": "g",
                    "name": "Show source control",
                    "type": "command"
                },
                {
                    "command": "gitlens.toggleFileHeatmap",
                    "key": "h",
                    "name": "Heatmap",
                    "type": "command"
                },
                {
                    "command": "git.viewFileHistory",
                    "key": "H",
                    "name": "History",
                    "type": "command"
                },
                {
                    "command": "git.init",
                    "key": "i",
                    "name": "Init",
                    "type": "command"
                },
                {
                    "command": "workbench.action.editor.nextChange",
                    "key": "j",
                    "name": "Next Change",
                    "type": "command"
                },
                {
                    "command": "workbench.action.editor.previousChange",
                    "key": "k",
                    "name": "Previous Change",
                    "type": "command"
                },
                {
                    "command": "gitlens.toggleLineBlame",
                    "key": "l",
                    "name": "Toggle Line Blame",
                    "type": "command",
                    "when": "editorTextFocus && gitlens:canToggleCodeLens && gitlens:enabled && config.gitlens.keymap == 'alternate'"
                },
                {
                    "command": "gitlens.toggleCodeLens",
                    "key": "L",
                    "name": "Toggle GitLens",
                    "type": "command",
                    "when": "editorTextFocus && gitlens:canToggleCodeLens && gitlens:enabled && config.gitlens.keymap == 'alternate'"
                },
                {
                    "command": "git.merge",
                    "key": "m",
                    "name": "Merge",
                    "type": "command"
                },
                {
                    "command": "git.push",
                    "key": "p",
                    "name": "Push",
                    "type": "command"
                },
                {
                    "command": "git.pull",
                    "key": "P",
                    "name": "Pull",
                    "type": "command"
                },
                {
                    "command": "workbench.view.scm",
                    "key": "s",
                    "name": "Stash",
                    "type": "command"
                },
                {
                    "command": "gitlens.showQuickRepoStatus",
                    "key": "S",
                    "name": "Status",
                    "type": "command",
                    "when": "gitlens:enabled && config.gitlens.keymap == 'alternate'"
                },
                {
                    "command": "git.createTag",
                    "key": "t",
                    "name": "Create Tag",
                    "type": "command"
                },
                {
                    "command": "git.deleteTag",
                    "key": "T",
                    "name": "Delete Tag",
                    "type": "command"
                },
                {
                    "command": "git.unstage",
                    "key": "U",
                    "name": "Unstage",
                    "type": "command"
                }
            ],
            "key": "g",
            "name": "Git...",
            "type": "bindings"
        },
        {
            "command": "workbench.action.splitEditorDown",
            "key": "h",
            "name": "Split Horizontal",
            "type": "command"
        },
        {
            "bindings": [
                {
                    "command": "editor.action.refactor",
                    "key": ";",
                    "name": "Refactor",
                    "type": "command",
                    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
                },
                {
                    "command": "editor.action.autoFix",
                    "key": "a",
                    "name": "Auto Fix",
                    "type": "command",
                    "when": "editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/"
                },
                {
                    "command": "editor.action.revealDefinition",
                    "key": "d",
                    "name": "Definition",
                    "type": "command",
                    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
                },
                {
                    "command": "editor.action.revealDeclaration",
                    "key": "D",
                    "name": "Declaration",
                    "type": "command"
                },
                {
                    "command": "workbench.actions.view.problems",
                    "key": "e",
                    "name": "Errors",
                    "type": "command"
                },
                {
                    "command": "editor.action.formatDocument",
                    "key": "f",
                    "name": "Format",
                    "type": "command",
                    "when": "editorHasDocumentFormattingProvider && editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
                },
                {
                    "command": "editor.action.goToImplementation",
                    "key": "i",
                    "name": "Implementation",
                    "type": "command",
                    "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
                },
                {
                    "command": "codelens.showLensesInCurrentLine",
                    "key": "l",
                    "name": "Code Lens",
                    "type": "command"
                },
                {
                    "command": "editor.action.marker.next",
                    "key": "n",
                    "name": "Next Problem",
                    "type": "command",
                    "when": "editorFocus"
                },
                {
                    "command": "editor.action.marker.nextInFiles",
                    "key": "N",
                    "name": "Next Problem (Proj)",
                    "type": "command",
                    "when": "editorFocus"
                },
                {
                    "command": "outline.focus",
                    "key": "o",
                    "name": "Outline",
                    "type": "command"
                },
                {
                    "command": "editor.action.marker.prevInFiles",
                    "key": "p",
                    "name": "Prev Problem",
                    "type": "command",
                    "when": "editorFocus"
                },
                {
                    "command": "editor.action.marker.prev",
                    "key": "P",
                    "name": "Prev Problem (Proj)",
                    "type": "command",
                    "when": "editorFocus"
                },
                {
                    "command": "editor.action.quickFix",
                    "key": "q",
                    "name": "Quick Fix",
                    "type": "command",
                    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
                },
                {
                    "command": "editor.action.goToReferences",
                    "key": "r",
                    "name": "References",
                    "type": "command",
                    "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
                },
                {
                    "command": "editor.action.rename",
                    "key": "R",
                    "name": "Rename",
                    "type": "command",
                    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
                },
                {
                    "command": "references-view.find",
                    "key": "v",
                    "name": "View All References",
                    "type": "command",
                    "when": "editorHasReferenceProvider"
                },
                {
                    "command": "workbench.action.gotoSymbol",
                    "key": "s",
                    "name": "Go To Symbol",
                    "type": "command"
                },
                {
                    "command": "workbench.action.showAllSymbols",
                    "key": "S",
                    "name": "Show All Symbols",
                    "type": "command"
                }
            ],
            "key": "l",
            "name": "LSP...",
            "type": "bindings"
        },
        {
            "command": "editor.action.toggleMinimap",
            "key": "M",
            "name": "Minimap",
            "type": "command"
        },
        {
            "bindings": [
                {
                    "command": "workbench.action.files.openFolder",
                    "key": "d",
                    "name": "Directory",
                    "type": "command"
                },
                {
                    "command": "workbench.action.openRecent",
                    "key": "r",
                    "name": "Recent",
                    "type": "command"
                },
                {
                    "command": "workbench.action.files.openFile",
                    "key": "f",
                    "name": "File",
                    "type": "command"
                }
            ],
            "key": "o",
            "name": "Open...",
            "type": "bindings"
        },
        {
            "bindings": [
                {
                    "command": "editor.action.peekDefinition",
                    "key": "d",
                    "name": "Definition",
                    "type": "command",
                    "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
                },
                {
                    "command": "editor.action.peekDeclaration",
                    "key": "D",
                    "name": "Declaration",
                    "type": "command"
                },
                {
                    "command": "editor.action.peekImplementation",
                    "key": "i",
                    "name": "Implementation",
                    "type": "command",
                    "when": "editorHasImplementationProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
                },
                {
                    "command": "togglePeekWidgetFocus",
                    "key": "p",
                    "name": "Toggle Focus",
                    "type": "command",
                    "when": "inReferenceSearchEditor || referenceSearchVisible"
                },
                {
                    "command": "editor.action.referenceSearch.trigger",
                    "key": "r",
                    "name": "References",
                    "type": "command"
                },
                {
                    "command": "editor.action.peekTypeDefinition",
                    "key": "t",
                    "name": "Type Definition",
                    "type": "command"
                }
            ],
            "key": "p",
            "name": "Peek...",
            "type": "bindings"
        },
        {
            "bindings": [
                {
                    "command": "workbench.action.quickOpen",
                    "key": "f",
                    "name": "Files",
                    "type": "command"
                },
                {
                    "command": "workbench.action.findInFiles",
                    "key": "t",
                    "name": "Text",
                    "type": "command"
                }
            ],
            "key": "s",
            "name": "Search...",
            "type": "bindings"
        },
        {
            "bindings": [
                {
                    "command": "workbench.view.search",
                    "key": "s",
                    "name": "Show search",
                    "type": "command"
                },
                {
                    "command": "workbench.view.scm",
                    "key": "g",
                    "name": "Show source control",
                    "type": "command"
                },
                {
                    "command": "workbench.view.extension.test",
                    "key": "t",
                    "name": "Show test",
                    "type": "command"
                },
                {
                    "command": "workbench.view.remote",
                    "key": "r",
                    "name": "Show remote explorer",
                    "type": "command"
                },
                {
                    "command": "workbench.view.extensions",
                    "key": "x",
                    "name": "Show extensions",
                    "type": "command"
                },
                {
                    "command": "workbench.actions.view.problems",
                    "key": "p",
                    "name": "Show problem",
                    "type": "command"
                },
                {
                    "command": "workbench.action.output.toggleOutput",
                    "key": "o",
                    "name": "Show output",
                    "type": "command"
                },
                {
                    "command": "workbench.debug.action.toggleRepl",
                    "key": "d",
                    "name": "Show debug console",
                    "type": "command"
                }
            ],
            "key": "S",
            "name": "Show...",
            "type": "bindings"
        },
        {
            "bindings": [
                {
                    "command": "workbench.action.togglePanel",
                    "key": "t",
                    "name": "Toggle Terminal",
                    "type": "command"
                },
                {
                    "command": "workbench.action.terminal.toggleTerminal",
                    "key": "T",
                    "name": "Focus Terminal",
                    "type": "command",
                    "when": "!terminalFocus"
                },
                {
                    "command": "workbench.action.terminal.new",
                    "key": "n",
                    "name": "New Terminal",
                    "type": "command",
                    "when": "terminalProcessSupported"
                }
            ],
            "key": "t",
            "name": "Terminal...",
            "type": "bindings"
        },
        {
            "bindings": [
                {
                    "command": "workbench.action.toggleActivityBarVisibility",
                    "key": "a",
                    "name": "Toggle tool/activity bar visibility",
                    "type": "command"
                },
                {
                    "command": "workbench.action.toggleSidebarVisibility",
                    "key": "b",
                    "name": "Toggle side bar visibility",
                    "type": "command"
                },
                {
                    "command": "workbench.action.togglePanel",
                    "key": "j",
                    "name": "Toggle panel visibility",
                    "type": "command"
                },
                {
                    "command": "workbench.action.toggleFullScreen",
                    "key": "f",
                    "name": "Toggle full screen",
                    "type": "command"
                },
                {
                    "command": "workbench.action.selectTheme",
                    "key": "s",
                    "name": "Select theme",
                    "type": "command"
                },
                {
                    "command": "workbench.action.toggleMaximizedPanel",
                    "key": "m",
                    "name": "Toggle maximized panel",
                    "type": "command"
                },
                {
                    "command": "workbench.action.toggleTabsVisibility",
                    "key": "t",
                    "name": "Toggle tab visibility",
                    "type": "command"
                }
            ],
            "key": "u",
            "name": "UI toggles...",
            "type": "bindings"
        },
        {
            "command": "workbench.action.splitEditor",
            "key": "v",
            "name": "Split Vertical",
            "type": "command"
        },
        {
            "bindings": [
                {
                    "command": "workbench.action.focusPreviousGroup",
                    "key": "W",
                    "name": "Focus previous editor group",
                    "type": "command"
                },
                {
                    "command": "workbench.action.moveActiveEditorGroupLeft",
                    "key": "h",
                    "name": "Move editor group left",
                    "type": "command"
                },
                {
                    "command": "workbench.action.moveActiveEditorGroupDown",
                    "key": "j",
                    "name": "Move editor group down",
                    "type": "command"
                },
                {
                    "command": "workbench.action.moveActiveEditorGroupUp",
                    "key": "k",
                    "name": "Move editor group up",
                    "type": "command"
                },
                {
                    "command": "workbench.action.moveActiveEditorGroupRight",
                    "key": "l",
                    "name": "Move editor group right",
                    "type": "command"
                },
                {
                    "command": "workbench.action.toggleEditorWidths",
                    "key": "t",
                    "name": "Toggle editor group sizes",
                    "type": "command"
                },
                {
                    "command": "workbench.action.minimizeOtherEditors",
                    "key": "m",
                    "name": "Maximize editor group",
                    "type": "command"
                },
                {
                    "command": "workbench.action.maximizeEditor",
                    "key": "M",
                    "name": "Maximize editor group and hide side bar",
                    "type": "command"
                },
                {
                    "command": "workbench.action.evenEditorWidths",
                    "key": "=",
                    "name": "Reset editor group sizes",
                    "type": "command"
                },
                {
                    "command": "workbench.action.joinAllGroups",
                    "key": "z",
                    "name": "Combine all editors",
                    "type": "command"
                },
                {
                    "command": "workbench.action.closeEditorsInGroup",
                    "key": "d",
                    "name": "Close editor group",
                    "type": "command"
                },
                {
                    "command": "workbench.action.closeAllGroups",
                    "key": "x",
                    "name": "Close all editor groups",
                    "type": "command"
                }
            ],
            "key": "w",
            "name": "Window...",
            "type": "bindings"
        },
        {
            "command": "workbench.view.extensions",
            "key": "x",
            "name": "Extensions",
            "type": "command"
        },
        {
            "command": "workbench.action.toggleZenMode",
            "key": "z",
            "name": "Toggle zen mode",
            "type": "command"
        }
    ],
    "whichkey.delay": 500,
    "whichkey.sortOrder": "alphabetically",
    "whichkey.transient": {
        "error": {
            "bindings": [
                {
                    "command": "editor.action.marker.prev",
                    "key": "N",
                    "name": "Previous error"
                },
                {
                    "command": "editor.action.marker.next",
                    "key": "n",
                    "name": "Next error"
                },
                {
                    "command": "editor.action.marker.prev",
                    "key": "p",
                    "name": "Previous error"
                }
            ],
            "title": "Error transient"
        },
        "fontZooming": {
            "bindings": [
                {
                    "command": "editor.action.fontZoomIn",
                    "key": "=",
                    "name": "Zoom in"
                },
                {
                    "command": "editor.action.fontZoomIn",
                    "key": "+",
                    "name": "Zoom in"
                },
                {
                    "command": "editor.action.fontZoomOut",
                    "key": "-",
                    "name": "Zoom out"
                },
                {
                    "command": "editor.action.fontZoomReset",
                    "key": "0",
                    "name": "Reset zoom"
                }
            ],
            "title": "Front zooming transient"
        },
        "frameZooming": {
            "bindings": [
                {
                    "command": "workbench.action.zoomIn",
                    "key": "=",
                    "name": "Zoom in"
                },
                {
                    "command": "workbench.action.zoomIn",
                    "key": "+",
                    "name": "Zoom in"
                },
                {
                    "command": "workbench.action.zoomOut",
                    "key": "-",
                    "name": "Zoom out"
                },
                {
                    "command": "workbench.action.zoomReset",
                    "key": "0",
                    "name": "Reset zoom"
                }
            ],
            "title": "Frame zooming transient"
        },
        "imageZooming": {
            "bindings": [
                {
                    "command": "imagePreview.zoomIn",
                    "key": "=",
                    "name": "Zoom in"
                },
                {
                    "command": "imagePreview.zoomIn",
                    "key": "+",
                    "name": "Zoom in"
                },
                {
                    "command": "imagePreview.zoomOut",
                    "key": "-",
                    "name": "Zoom out"
                }
            ],
            "title": "Image zooming transient"
        },
        "lineMoving": {
            "bindings": [
                {
                    "command": "editor.action.moveLinesDownAction",
                    "key": "J",
                    "name": "Move lines down"
                },
                {
                    "command": "editor.action.moveLinesUpAction",
                    "key": "K",
                    "name": "Move lines up"
                }
            ],
            "title": "Line moving transient"
        },
        "smartExpand": {
            "bindings": [
                {
                    "command": "editor.action.smartSelect.grow",
                    "key": "v",
                    "name": "Grow selection"
                },
                {
                    "command": "editor.action.smartSelect.shrink",
                    "key": "V",
                    "name": "Shrink selection"
                }
            ],
            "title": "Smart expand transient"
        },
        "symbol": {
            "bindings": [
                {
                    "command": "editor.action.wordHighlight.prev",
                    "key": "p",
                    "name": "Previous occurrence"
                },
                {
                    "command": "editor.action.wordHighlight.prev",
                    "key": "N",
                    "name": "Previous occurrence"
                },
                {
                    "command": "editor.action.wordHighlight.next",
                    "key": "n",
                    "name": "Next occurrence"
                },
                {
                    "commands": [
                        "editor.action.addSelectionToNextFindMatch",
                        "workbench.action.findInFiles"
                    ],
                    "key": "/",
                    "name": "Search in a project with a selection"
                }
            ],
            "title": "Highlight symbol transient"
        }
    },
    "update.mode": "manual",
    "security.workspace.trust.untrustedFiles": "open",
    "editor.fontSize": 14.5,
    "dotenv.enableAutocloaking": false,
    "vscode-neovim.compositeKeys": {
        "jk": {
            "command": "vscode-neovim.escape"
        }
    },
    "gitlens.codeLens.scopes": [
        "document",
        "containers"
    ],
    "quick-lint-js.snarky": true,
    "vscode-neovim.neovimInitVimPaths.linux": "~/.config/nvim/init.lua",
    "[lua]": {
        "editor.defaultFormatter": "JohnnyMorganz.stylua"
    },
    "editor.semanticHighlighting.enabled": true,
    "settingsSync.keybindingsPerPlatform": false,
    "Lua.type.checkTableShape": true,
    "Lua.type.inferParamType": true,
    "terminal.integrated.gpuAcceleration": "on",
    "terminal.integrated.enableImages": true,
    "window.zoomLevel": 0.2,
    "Lua.diagnostics.libraryFiles": "Enable",
    "Lua.workspace.library": [
        "$HOME/.local/share/nvim/lazy/"
    ],
    "git.openRepositoryInParentFolders": "never",
    "stylua.searchBinaryInPATH": true,
    "[markdown]": {
        "editor.defaultFormatter": "yzhang.markdown-all-in-one"
    },
    "files.insertFinalNewline": true,
    "eslint.useFlatConfig": true,
    "eslint.useESLintClass": true,
    "astro.updateImportsOnFileMove.enabled": true,
    "workbench.sideBar.location": "right",
    "chat.commandCenter.enabled": false
}
